services:
  picarx-ds:
    build: .
    image: ghcr.io/cau-se/arches-picar-x/picarx:${TAG:-latest}
    environment:
      - ROS_HOSTNAME=picarx-ds
      - ROS_MASTER_URI=http://picarx-ds:11315
      - ROS_HOST_PORT=11315
    tty: true
    ports:
      - 11315:11315
    command: roscore -p 11315
    healthcheck:
      test: [ "CMD-SHELL", "curl $${ROS_MASTER_URI} || exit 1" ]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 1s

  mosquitto:
    container_name: mqtt-server
    image: eclipse-mosquitto
    ports:
      - 1883:1883
    volumes:
      - ./config/mqtt:/root/catkin_ws/mosquitto
    command: mosquitto -c /root/catkin_ws/mosquitto/mosquitto.conf -p 1883

  picarx-ds-gazebo:
    image: ghcr.io/cau-se/arches-picar-x/picarx-gazebo:${TAG:-latest}
    build:
      context: ./simulation
      dockerfile: Dockerfile
      target: desktop
      args:
        - TAG=${TAG:-latest}
    env_file:
      - ./env/picarx-ds.env
    environment:
      - DISPLAY=$DISPLAY
      - LIBGL_ALWAYS_INDIRECT=0
      - ROS_MASTER_URI=http://picarx-ds:11315
    stdin_open: true
    tty: true
    volumes:
      - ${X11PATH:-/tmp/.X11-unix}:/tmp/.X11-unix
      - ./core:/root/catkin_ws/src/core
      - ./simulation:/root/catkin_ws/src/simulation
    command: /bin/bash -c "roslaunch picarx_gazebo picarx-world.launch"
    depends_on:
      picarx-ds:
        condition: service_healthy

  picarx-gazebo-control:
    image: ghcr.io/cau-se/arches-picar-x/picarx-gazebo:${TAG:-latest}
    env_file:
      - ./env/picarx-ds.env
    tty: true
    volumes:
      - ./core:/root/catkin_ws/src/core
      - ./simulation:/root/catkin_ws/src/simulation
    command: /bin/bash -c "roslaunch picarx_control picarx_control.launch"
    restart: on-failure
    depends_on:
      picarx-ds-gazebo:
        condition: service_started

  shadow-ds:
    image: ghcr.io/cau-se/arches-picar-x/picarx:${TAG:-latest}
    env_file:
      - ./env/picarx-ds.env
    tty: true
    command: /bin/bash -c "roslaunch arches_core digitalshadow_dt.launch"
    depends_on:
      picarx-ds:
        condition: service_healthy

  mqtt-ds:
    image: ghcr.io/cau-se/arches-picar-x/arches-mqtt-bridge:${TAG:-latest}
    build:
      dockerfile: Dockerfile-arches-mqtt-bridge
      context: ./ros
      args:
        - TAG=${TAG:-latest}
        - ARCH=${ARCH:-}
    env_file:
      - ./env/picarx-ds.env
    command: /bin/bash -c "roslaunch arches_mqtt_bridge pt_client.launch host:=$${MQTT_HOST:-192.168.1.2}"
    depends_on:
      picarx-ds:
        condition: service_healthy

  ackermann_skill-ds:
    image: ghcr.io/cau-se/arches-picar-x/skills/ackermann:${TAG:-latest}
    build:
      dockerfile: Dockerfile
      context: ./ros/skills/ackermann_drive
      args:
        - TAG=${TAG:-latest}
        - ARCH=${ARCH:-}
    env_file:
      - ./env/picarx-ds.env
    tty: true
    privileged: true
    volumes:
      - /sys/class/gpio:/sys/class/gpio
      - ${I2C:-/dev/i2c-0}:${I2C:-/dev/i2c-0}
      - ./core:/root/catkin_ws/src/core
      - ./ros/skills/ackermann_drive:/root/catkin_ws/src/skills/ackermann_drive
    command: /bin/bash -c "roslaunch picarx_ackermann_drive ackermann_skill.launch"
    depends_on:
      picarx-ds:
        condition: service_healthy

  drive_monitor:
    build: ./ros/skills/ackermann_drive
    image: ghcr.io/cau-se/arches-picar-x/skills/ackermann:${TAG:-latest}
    env_file:
      - ./env/picarx-ds.env
    tty: true
    privileged: true
    volumes:
      - ./core:/root/catkin_ws/src/core
      - ./ros/skills/ackermann_drive:/root/catkin_ws/src/skills/ackermann_drive
    command: /bin/bash -c "roslaunch picarx_ackermann_drive monitor_ds.launch"
    depends_on:
      picarx-ds:
        condition: service_healthy

networks:
  picarx:
    external: true
