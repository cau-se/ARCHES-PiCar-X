services:
  picarx-dm:
    build: .
    image: ghcr.io/cau-se/arches-picar-x/picarx:${TAG:-latest}
    environment:
      - ROS_HOSTNAME=picarx-dm
      - ROS_MASTER_URI=http://picarx-dm:11315
      - ROS_HOST_PORT=11315
    tty: true
    ports:
      - 11315:11315
    command: roscore -p 11315
    healthcheck:
      test: [ "CMD-SHELL", "curl $${ROS_MASTER_URI} || exit 1" ]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 1s

  picarx-dm-gazebo:
    image: ghcr.io/cau-se/arches-picar-x/picarx-gazebo:${TAG:-latest}
    build:
      context: ./simulation
      dockerfile: Dockerfile
      target: desktop
      args:
        - TAG=${TAG:-latest}
    env_file:
      - ./env/picarx-dm.env
    environment:
      - DISPLAY=$DISPLAY
      - LIBGL_ALWAYS_INDIRECT=0
      - ROS_MASTER_URI=http://picarx-dm:11315
    stdin_open: true
    tty: true
    volumes:
      - ${X11PATH:-/tmp/.X11-unix}:/tmp/.X11-unix
      - ./core:/root/catkin_ws/src/core
      - ./simulation:/root/catkin_ws/src/simulation
    command: /bin/bash -c "roslaunch picarx_gazebo picarx-world.launch"
    depends_on:
      picarx-dm:
        condition: service_healthy

  picarx-dm-gazebo-control:
    image: ghcr.io/cau-se/arches-picar-x/picarx-gazebo:${TAG:-latest}
    env_file:
      - ./env/picarx-dm.env
    tty: true
    volumes:
      - ./core:/root/catkin_ws/src/core
      - ./simulation:/root/catkin_ws/src/simulation
    command: /bin/bash -c "roslaunch picarx_control picarx_control.launch"
    restart: on-failure
    depends_on:
      picarx-dm-gazebo:
        condition: service_started



  drive_executor:
    image: ghcr.io/cau-se/arches-picar-x/skills/ackermann:${TAG:-latest}
    build:
      dockerfile: Dockerfile
      context: ./ros/skills/ackermann_drive
      args:
        - TAG=${TAG:-latest}
        - ARCH=${ARCH:-}
    env_file:
      - ./env/picarx-dm.env
    tty: true
    privileged: true
    volumes:
      - ./core:/root/catkin_ws/src/core
      - ./ros/skills/ackermann_drive:/root/catkin_ws/src/skills/ackermann_drive
    command: /bin/bash -c "roslaunch picarx_ackermann_drive drive_executor_dm.launch"
    depends_on:
      picarx-dm:
        condition: service_healthy

networks:
  picarx:
    external: true
